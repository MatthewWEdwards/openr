From 3740db48450d26cfe6a1a6fe69f872dc02e71d6c Mon Sep 17 00:00:00 2001
From: Matthew Edwards <matthewedwards@fb.com>
Date: Thu, 1 Jul 2021 04:57:14 +0000
Subject: [PATCH] Openr TG

---
 CMakeLists.txt            | 18 ++++++++++++++++--
 openr/kvstore/KvStore.cpp | 14 +++++---------
 2 files changed, 21 insertions(+), 11 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index d30e66d8..212bdb6a 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -5,16 +5,17 @@
 # LICENSE file in the root directory of this source tree.
 #
 
-cmake_minimum_required(VERSION 3.2)
+cmake_minimum_required(VERSION 3.9)
 project(openr)
 
-set(CMAKE_CXX_STANDARD 17)
+set(CMAKE_CXX_STANDARD 20)
 set(CMAKE_CXX_STANDARD_REQUIRED ON)
 set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wextra")
 set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-noexcept-type")
 
 set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-maybe-uninitialized")
 set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-deprecated-declarations")
+set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++20 -fcoroutines")
 
 # Optionally build with LTO
 option(BUILD_WITH_LTO "BUILD_WITH_LTO" OFF)
@@ -335,6 +336,7 @@ target_link_libraries(openrlib
   ${SODIUM}
   ${RE2}
   ${Boost_LIBRARIES}
+  ${BENCHMARK}
   -lpthread
   -lcrypto
   stdc++fs
@@ -367,6 +369,7 @@ target_link_libraries(openr_bin
   ${FOLLY_EXCEPTION_TRACER}
   ${SODIUM}
   ${Boost_LIBRARIES}
+  ${BENCHMARK}
   -lpthread
   -lcrypto
 )
@@ -870,4 +873,15 @@ if(BUILD_TESTS)
     DESTINATION sbin/tests/openr/kvstore
   )
 
+target_compile_features(openr_bin PUBLIC cxx_std_20)
+target_compile_features(openrlib PUBLIC cxx_std_20)
+target_compile_features(decision_benchmark PUBLIC cxx_std_20)
+target_compile_features(kvstore_benchmark PUBLIC cxx_std_20)
+target_compile_features(netlink_fib_handler_benchmark PUBLIC cxx_std_20)
+target_compile_features(fib_benchmark PUBLIC cxx_std_20)
+target_compile_features(config_store_benchmark PUBLIC cxx_std_20)
+target_compile_features(netlink_socket_example PUBLIC cxx_std_20)
+target_compile_features(platform_linux PUBLIC cxx_std_20)
+target_compile_features(openr_kvstore_snooper PUBLIC cxx_std_20)
+
 endif()
diff --git a/openr/kvstore/KvStore.cpp b/openr/kvstore/KvStore.cpp
index f1e2531d..4bdcca27 100644
--- a/openr/kvstore/KvStore.cpp
+++ b/openr/kvstore/KvStore.cpp
@@ -938,15 +938,11 @@ KvStore::getGlobalCounters() const {
   for (auto& kvDb : kvStoreDb_) {
     auto kvDbCounters = kvDb.second.getCounters();
     // add up counters for same key from all kvStoreDb instances
-    flatCounters = std::accumulate(
-        kvDbCounters.begin(),
-        kvDbCounters.end(),
-        flatCounters,
-        [](std::map<std::string, int64_t>& flatCounters,
-           const std::pair<const std::string, int64_t>& kvDbcounter) {
-          flatCounters[kvDbcounter.first] += kvDbcounter.second;
-          return flatCounters;
-        });
+    for (auto it = kvDbCounters.begin(); 
+         it != kvDbCounters.end();
+         ++it) {
+           flatCounters[it->first] += it->second;
+    }
   }
   return flatCounters;
 }
-- 
2.25.1

